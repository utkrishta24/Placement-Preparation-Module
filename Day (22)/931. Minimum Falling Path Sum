class Solution {

public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
    int res=1e9;
    int n=matrix.size();
    int m=matrix[0].size();
    vector<vector<int>> dp(n,vector<int>(m,0));
    for(int j=0;j<m;j++)
        dp[0][j]=matrix[0][j];
    for(int i=1;i<n;i++){
        for(int j=0;j<m;j++){
            int up=matrix[i][j]+dp[i-1][j];
            int lD=matrix[i][j];
            if(j-1>=0)
                lD+=dp[i-1][j-1];
            else 
                lD+=1e9;
            int rD=matrix[i][j];
            if(j+1<=m-1)
                rD+=dp[i-1][j+1];
            else 
                rD+=1e9;
            dp[i][j]=min(up,min(lD,rD));
        }
    }
    for(int j=0;j<m;j++){
        res=min(res,dp[n-1][j]);
    }
    return res;
    }
};
