bool myfunc(vector<int> &arr, int n, int k){
	vector<bool>dp(k+1,0);
	dp[0]=true;
    dp[arr[0]]=true;
    bool take,noTake;
    for(int i=1;i<n;i++){
        vector<bool>temp(k+1,0);
        temp[0]=true;
        for(int j=1;j<=k;j++){
            noTake=dp[j];
            take=false;
            if(j>=arr[i])
                take=dp[j-arr[i]];
            temp[j]=(take||noTake);
        }
        dp=temp;
    }
    return dp[k];
}

bool canPartition(vector<int> &arr, int n)
{
	// Write your code here.
	int sum=0,k;
	for(int i=0;i<n;i++)
		sum+=arr[i];
	if(sum%2==1) return false;
	k=sum/2;
	return myfunc(arr,n,k);

	
}
