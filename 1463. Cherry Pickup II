class Solution {
public:
    int cherryPickup(vector<vector<int>>& grid) {
    int r=grid.size();
    int c=grid[0].size();    
    vector<vector<int>>dp(c,vector<int>(c,0));
    vector<vector<int>>temp(c,vector<int>(c,0));
    for(int j1=0;j1<c;j1++){
        for(int j2=0;j2<c;j2++){
            if(j1==j2) dp[j1][j2]=grid[r-1][j1];
            else dp[j1][j2]=grid[r-1][j1]+grid[r-1][j2];
        }
    }
    for(int i=r-2;i>=0;i--){
        for(int j1=0;j1<c;j1++){
            for(int j2=0;j2<c;j2++){
                int maxi=-1e9;
                for(int dj1=-1;dj1<=1;dj1++){
                    for(int dj2=-1;dj2<=1;dj2++){
                        int sum=0;
                        if(j1==j2)
                            sum+=grid[i][j1];
                        else
                            sum+=grid[i][j1] + grid[i][j2];
                        if(j1+dj1>=0 && j1+dj1<c && j2+dj2>=0 && j2+dj2<c)
                            sum+=dp[j1+dj1][j2+dj2];
                        else
                            sum+=-1e9;
                        maxi=max(maxi,sum);
                    }
                }
                temp[j1][j2]=maxi;
            }
        }
        dp=temp;
    }
    return dp[0][c-1];
    }
};
