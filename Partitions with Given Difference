//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    int mod=1e9+7;
    int myfunc(int ind, vector<int>& arr, int k,vector<vector<int>>&dp){
    	// if(k==0) return 1;
    	if (ind==0){ 
           if(k==0 && arr[0]==0) return 2;
           if(k==0 || k==arr[0]) return 1;
           return 0;
        }
    	if(dp[ind][k]!=-1)return dp[ind][k];
    	int notake=(myfunc(ind-1,arr,k,dp))%mod;
    	int take=0;
    	if(arr[ind]<=k) take = (myfunc(ind-1,arr,k-arr[ind],dp))%mod;
    	return dp[ind][k]=(take+notake)%mod;
    }
    
    
        int countPartitions(int n, int d, vector<int>& arr) {
            // Code here
            int sum=0;
            for(int i=0;i<n;i++)
                sum+=arr[i];
            if(sum-d<0 || (sum-d)%2) return false;
            int k=(sum-d)/2;
    	    vector<vector<int>>dp(n,vector<int>(k+1,-1));
    	    return (myfunc(n-1,arr,k,dp))%mod;
        }
    };

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, d;
        cin >> n >> d;
        vector<int> arr;

        for (int i = 0; i < n; ++i) {
            int x;
            cin >> x;
            arr.push_back(x);
        }

        Solution obj;
        cout << obj.countPartitions(n, d, arr) << "\n";
    }
    return 0;
}
// } Driver Code Ends
