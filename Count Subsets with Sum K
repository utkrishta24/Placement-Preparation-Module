int findWays(vector<int>& arr, int k)
{
	// Write your code here.
	int n=arr.size();
    int mod=1e9+7;
	vector<vector<int>>dp(n,vector<int>(k+1,0));
    // for(int i=0;i<n;i++) dp[i][0]=1;
    if(arr[0]==0) dp[0][0]=2;
	else dp[0][0]=1;
	if(arr[0]!=0 && arr[0]<=k) dp[0][arr[0]]=1;
    for(int i=1;i<n;i++){
        for(int j=0;j<=k;j++){
            int notake=(dp[i-1][j])%mod;
            int take=0;
            if(arr[i]<=j) take = (dp[i-1][j-arr[i]])%mod;
            dp[i][j]=(take+notake)%mod;
        }
    }
	return (dp[n-1][k])%mod;
}
