#include <bits/stdc++.h> 

int myfunc(int i, int j, vector<vector<int>> &matrix, 
    vector<vector<int>> &dp){
    int n=matrix.size();
    int m=matrix[0].size();
    if(j<0 || j>=m) return -1e9;
    if(i==0) return matrix[i][j];
    if(dp[i][j]!=-1) return dp[i][j];
    int up,lD,rD;
    up=matrix[i][j]+myfunc(i-1,j,matrix,dp);
    lD=matrix[i][j]+myfunc(i-1,j-1,matrix,dp);
    rD=matrix[i][j]+myfunc(i-1,j+1,matrix,dp);
    return dp[i][j]=max(up,max(lD,rD));
}

int getMaxPathSum(vector<vector<int>> &matrix)
{
    //  Write your code here.
    int res=-1e9;
    int n=matrix.size();
    int m=matrix[0].size();
    vector<vector<int>> dp(n,vector<int>(m,-1));
    for(int j=0;j<m;j++){
        res=max(res,myfunc(n-1,j,matrix,dp));
    }
    return res;
}
